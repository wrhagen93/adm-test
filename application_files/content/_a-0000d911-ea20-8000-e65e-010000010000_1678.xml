<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>courseRecordSource</name>
        <uuid>_a-0000d911-ea20-8000-e65e-010000010000_1678</uuid>
        <description></description>
        <parentUuid>_a-0000d911-ea20-8000-e65e-010000010000_2732</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>= with(&#xD;
  local!pagingInfo: ri!queryData.pagingInfo,&#xD;
  local!requestedId: &#xD;
    if(and(index(ri!queryData.filters, &quot;field&quot;, null) = &quot;rp!id&quot;,&#xD;
           index(ri!queryData.filters, &quot;operator&quot;, null) = &quot;=&quot;&#xD;
          ),&#xD;
      index(ri!queryData.filters, &quot;value&quot;, null),&#xD;
      null&#xD;
    ),&#xD;
  local!departmentFilterIndices: wherecontains(&quot;department&quot;, index(ri!queryData.filters, &quot;field&quot;, null)),&#xD;
  local!professorFilterIndices: wherecontains(&quot;professor&quot;, index(ri!queryData.filters, &quot;field&quot;, null)),&#xD;
  local!departmentFilter: index(ri!queryData.filters.value, local!departmentFilterIndices, null),&#xD;
  local!professorFilter: index(ri!queryData.filters.value, local!professorFilterIndices, null),&#xD;
  local!courses:&#xD;
    if(isnull(local!requestedId),&#xD;
      #&quot;_a-0000db78-71c1-8000-6fa4-640000640000_3943&quot;(&#xD;
        searchTerm: ri!queryData.searchText,&#xD;
        department: local!departmentFilter,&#xD;
        professor: local!professorFilter,&#xD;
        pagingInfo: local!pagingInfo&#xD;
      ),&#xD;
      #&quot;921a298a-faf8-4709-8257-50a0cf0163ad&quot;(&#xD;
        local!requestedId,&#xD;
        local!pagingInfo&#xD;
      )&#xD;
    ),&#xD;
 local!courses&#xD;
)</definition>
        <namedTypedValue>
            <name>queryData</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <typedValue>
        <type>
            <name>RuleTestConfig?list</name>
            <namespace>http://www.appian.com/ae/types/2009</namespace>
        </type>
        <value>
            <el>
                <a:name/>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
                    <a:nameRef>queryData</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
                <a:assertions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
            </el>
        </value>
    </typedValue>
</contentHaul>
